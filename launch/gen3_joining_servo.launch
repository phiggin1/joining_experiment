<launch>
  <!-- The package has 2 examples of converting joystick commands to servo commands.
       This is the higher-latency, Python-based teleop_tools example.
       You can modify it in your own package for your own type of gamepad or joystick.
       We do plan to accept pull requests of config files for other controller types using this method.
  <remap from="/joint_states" to="/j2n6s300/joint_states"/>
  -->
  
  <arg name="rivr" default="true" />
  
  <node name="track_finger" pkg="joining_experiment" type="get_finger_pose.py" output="screen" ns="my_gen3" ></node>

  <node name="joining_servo" pkg="joining_experiment" type="servo_pose_tracking.py" output="screen" ns="my_gen3">
      <param name="rivr"  value="$(arg rivr)" />
  </node>
  
  <!-- This node does the servoing calculations  -->
  <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen" ns="my_gen3" >
    <rosparam command="load" file="$(find joining_experiment)/config/servo-config-gen3.yaml" />
    <remap from="/joint_states" to="/my_gen3/joint_states"/>
  </node>


</launch>
